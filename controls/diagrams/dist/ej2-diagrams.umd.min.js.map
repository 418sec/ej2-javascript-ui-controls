{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        maxHeight: 25, minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        maxHeight: 25, minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, maxHeight: 25, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(child.desiredSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            obj.width = helperObject.width;\n            obj.height = helperObject.height;\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        //let diff: number = helperObject.width - container.colDefns[obj.columnIndex].width;\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                        //parentNode.width += diff;\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    this.diagram.updateConnectorEdges(obj);\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n            }\n            layer.zIndexTable[obj.zIndex] = obj.id;\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                }\n                else {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && !this.diagramActions);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf(' + ') === -1 && node.id.indexOf('')) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        annotationWrapper =\n            actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        if (this.nestedBestRanks[j][cell.temp[0]]) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","maxHeight","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","canMeasurePath","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","updateConnectorEdges","UndoRedo","innerNode","zIndex","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","show","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateGridContainer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","annotationWrapper","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}