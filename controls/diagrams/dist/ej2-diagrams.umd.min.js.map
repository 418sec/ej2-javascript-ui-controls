{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/utility/uml-util.js","../src/diagram/interaction/container-interaction.js","../src/diagram/ruler/ruler.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/interaction/selector.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints, ElementAction } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID || !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n        else {\n            connector.sourcePoint = source;\n            connector.targetPoint = target;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child instanceof TextElement || (child.elementActions && ElementAction.ElementIsPort)) {\n                child.flip = flip;\n            }\n            if (!(child instanceof Canvas) && !(child instanceof Container) && !(child.elementActions && ElementAction.ElementIsPort)) {\n                var childX = ((offsetX - child.offsetX) + offsetX);\n                var childY = ((offsetY - child.offsetY) + offsetY);\n                if (flip === 'Horizontal') {\n                    child.flipOffset.x = childX - child.actualSize.width / 2;\n                }\n                else if (flip === 'Vertical') {\n                    child.flipOffset.y = childY - child.actualSize.height / 2;\n                }\n                else if (flip === 'Both') {\n                    child.flipOffset.x = childX - child.actualSize.width / 2;\n                    child.flipOffset.y = childY - child.actualSize.height / 2;\n                }\n            }\n            else if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, flip);\n            }\n        }\n    }\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\nimport { alignElement } from '../../utility/diagram-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n            alignElement(this, this.offsetX, this.offsetY, this.flip);\n        }\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { alignElement } from '../../utility/diagram-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n            alignElement(this, this.offsetX, this.offsetY, this.flip);\n        }\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        angle = (element.flip === 'Horizontal' || element.flip === 'Vertical') ? -element.parentTransform : element.parentTransform;\n        nativeElement.setAttribute('transform', 'rotate(' + angle + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        var pathAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = pathAngle;\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        var nativEAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = nativEAngle;\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            options.angle = -options.angle;\n        }\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        var imageAngle = (options.flip === 'Horizontal' || options.flip === 'Vertical') ? -options.angle : options.angle;\n        options.angle = imageAngle;\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n                if (child instanceof TextElement && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n            }\n            this.renderFlipElement(group, canvas, group.flip);\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions && ElementAction.ElementIsGroup) {\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","ReadOnly","verticalAlignment","horizontalAlignment","initObject","nodes","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","removeFromAQuad","removeObjectsFromLayer","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","None","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","alignElement","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","canMeasure","textNodes","textWrapBounds","imageSource","stretch","measureImage","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","pathAngle","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","nativEAngle","imageAngle","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","removeElements","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","innerHTML","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","measureElemnt","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}