{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/preview.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/objects/icon.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/diagram/layoutinfo.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-mapping.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/utility/diff-map.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram/custom-cursor.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content,\n                style: shape.header.annotation.style ? shape.header.annotation.style : undefined,\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270,\n                style: shape.phases[phaseIndex].header.annotation.style\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [\n                    {\n                        id: shape.lanes[laneIndex].header.annotation.id,\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0,\n                        style: shape.lanes[laneIndex].header.annotation.style,\n                    }\n                ],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if (shape.phaseSize === 0 && targetIndex === 0) {\n                        if (shape.header && shape.hasHeader) {\n                            grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'sourceID',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if (obj.disableConnectors && selectorItem.connectors.length > 0) {\n                canDraw = false;\n            }\n            if (obj.disableNodes && selectorItem.nodes.length > 0) {\n                canDraw = false;\n            }\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.content === '' && obj.source === '') {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2,\n                        angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path',\n                        fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content !== '') {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.height = obj.size;\n                    handleContent.width = obj.size;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else {\n                    var element_1 = new ImageElement();\n                    var options = this.getBaseAttributes(element_1, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element_1.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element_1.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.ejsIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.ejsIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && diff[key].type !== this.valueUpdated) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if (key != 'type') {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                            this.commandHandler.updateBlazorSelector();\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent());\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (this.isConnected) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n                            deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                            oldValue = {\n                                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                            };\n                            arg = {\n                                source: cloneBlazorObject(args.source), state: 'Completed',\n                                oldValue: oldValue, newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor()) {\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg;\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!(this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))) {\n                        if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                            if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                                var swimlane = this.diagram.getObject(parentNode.parentId);\n                                var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                                var firstlane = this.diagram.getObject(laneId);\n                                var x = firstlane.wrapper.bounds.x;\n                                var y = firstlane.wrapper.bounds.y;\n                                var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                                var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                                var swimlaneBounds = new Rect(x, y, width, height);\n                                if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                    obj.offsetX = helperObject.offsetX;\n                                    obj.offsetY = helperObject.offsetY;\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                    obj.rotateAngle = helperObject.rotateAngle;\n                                }\n                            }\n                            else {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                    if (obj.shape.type !== 'Bpmn' ||\n                                        (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                        obj.width = helperObject.width;\n                                        obj.height = helperObject.height;\n                                    }\n                                }\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = this.diagram;\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = { 'methodName': 'UpdateBlazorDiagramModelLayers', 'diagramobj': JSON.stringify(updatedModel) };\n            window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.UpdateBlazorDiagramModelLayers(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var lane = findLane(node, this.diagram);\n                    childTable[node.id] = cloneObject(lane);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        this.diagram.enableServerDataBinding(false);\n        var select = true;\n        if (!isBlazor()) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                if (newObj) {\n                    select = true;\n                    if (!hasSelection(this.diagram)) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                    else {\n                        if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                            for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                if (parentNode) {\n                                    parentNode = this.findParent(parentNode);\n                                    if (parentNode) {\n                                        if (newObj.id === parentNode.id) {\n                                            this.selectGroup(newObj);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        this.selectProcesses(newObj);\n                        select = this.selectBpmnSubProcesses(newObj);\n                        if (select) {\n                            this.select(newObj, i > 0 || multipleSelection, true);\n                        }\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n            this.updateBlazorSelectorModel(oldValue);\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneObject(this.diagram.selectedItems);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        this.diagram.enableServerDataBinding(false);\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var ejsInterop = 'ejsInterop';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.ejsIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        this.diagram.enableServerDataBinding(false);\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (!isBlazor()) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n                else {\n                    this.oldSelectedObjects = cloneObject(selectormodel);\n                }\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n            this.updateBlazorSelector();\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (isBlazor()) {\n                        previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                    }\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    if (isBlazor()) {\n                        updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var ejsInterop = 'ejsInterop';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].ejsIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].ejsIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        this.realActions |= RealAction.PreventDataInit;\n                        _super.prototype.refresh.call(this);\n                        this.realActions &= ~RealAction.PreventDataInit;\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n            }\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        this.refreshCanvasDiagramLayer(view);\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'chart_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                    var obj = _c[_b];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var ejsInterop = 'ejsInterop';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[ejsInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.ejsIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param Group defines where the diagram object to be added.\n     * @param Child defines the diagram object to be added to the group\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param obj returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        return isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @param obj return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @param obj returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[ejsInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[ejsInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var ejsInterop = 'ejsInterop';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[ejsInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[ejsInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousNodeObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        for (var _d = 0, _e = this.nodes; _d < _e.length; _d++) {\n            var obj = _e[_d];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _f = 0, _g = this.connectors; _f < _g.length; _f++) {\n            var obj = _g[_f];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _h = 0, _j = this.layers; _h < _j.length; _h++) {\n            var layer = _j[_h];\n            for (var _k = 0, _l = layer.objects; _k < _l.length; _k++) {\n                var obj = _l[_k];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _m = 0, _o = this.bpmnModule.textAnnotationConnectors; _m < _o.length; _m++) {\n                    var obj = _o[_m];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _p = 0, _q = Object.keys(bpmnTable); _p < _q.length; _p++) {\n            var obj = _q[_p];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _r = 0, groups_1 = groups; _r < groups_1.length; _r++) {\n            var obj = groups_1[_r];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _s = 0, connectors_1 = connectors; _s < connectors_1.length; _s++) {\n            var connector = connectors_1[_s];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor()) {\n            for (var _t = 0, _u = this.nodes; _t < _u.length; _t++) {\n                var obj = _u[_t];\n                updateNodeObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            for (var _v = 0, _w = this.connectors; _v < _w.length; _v++) {\n                var obj = _w[_v];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            if (window && window[blazor] && this.diagramActions && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n        this.commandHandler.updateBlazorSelector();\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var textArea, text, element, args, bpmnAnnotation, node, textWrapper, deleteNode, annotation, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        this.enableServerDataBinding(false);\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n                        bpmnAnnotation = false;\n                        node = void 0;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        if (annotation.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            annotation.content = text;\n                            this.dataBind();\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_3 = 0; i_3 < objects_2.length; i_3++) {\n                            var object = objects_2[i_3];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_3], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    this.allowServerDataBinding = false;\n                                    value = this.add(clonedObject, true);\n                                    this.allowServerDataBinding = true;\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagram: cloneBlazorObject(this),\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs = (_d.sent());\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","totalHeight","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","state","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateGradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","measureElementCount","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","innerHTML","trim","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","updateCloneProp","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","callback","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","onload","event","loadedImage","currentTarget","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Complex","Connect","Hyperlink","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","NodeBase","nodeTemplate","templateFn","SymbolSize","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","domTable","expandCollapse","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","ejsIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","segmentpoint1","segmentpoint2","oldConnector","oldValue","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","objj1","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","connectorSourceValue","dragOverArg","dragOver","returnargs","checkBlazor","connectionEventChange","connectedNode","insertValue","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","isServerUpdate","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","ejsInterop","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","crudDeleteNodes","diagramid","renderTimer","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","changedConnectors","blazor","dataSource","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","redo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","resetSegments","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","undoStack","redoStack","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","UpdateBlazorDiagramModel","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","_o","_p","_q","_r","groups_1","_s","connectors_1","_t","_u","_v","_w","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","phaseHeader","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","allowServerDataBinding","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","selectedSymbols","dragSize","previewSize","palettePreview","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}