{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.connectors.length === 0)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : arg.oldValue,\n                newValue: this.getSelectedObject(), cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        node.offsetX += offsetX;\n                        node.offsetY += offsetY;\n                        node.width += width;\n                        node.height += height;\n                        node.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(node, {}, {\n                            offsetX: node.offsetX, offsetY: node.offsetY,\n                            width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                        });\n                        objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                var getDefaults = getFunction(this.getNodeDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(node, this);\n                    node.offsetX = (defaults && defaults.width) || node.offsetX / 2;\n                    node.offsetY = (defaults && defaults.height) || node.offsetY / 2;\n                }\n                node.offsetX = (node.width || 50) / 2;\n                node.offsetY = (node.height || 50) / 2;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                var laneId = swimLane + lane + i;\n                if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                    var laneNode = this.nameTable[laneId].wrapper.bounds;\n                    var focusPoint = {\n                        x: laneNode.x + (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                        y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                    };\n                    if (swimlaneNode.shape.orientation === 'Horizontal') {\n                        focusPoint.y = laneNode.y;\n                    }\n                    else {\n                        focusPoint.x = laneNode.x;\n                        var laneHeaderId = this.nameTable[laneId].parentId +\n                            swimlaneNode.shape.lanes[0].id + '_0_header';\n                        focusPoint.y = laneNode.y +\n                            (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                node.margin.top + (node.wrapper.bounds.height / 2));\n                    }\n                    if (laneNode.containsPoint(focusPoint) ||\n                        (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                        addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                        updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                        break;\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'];\n        var top = diagram.spatialSearch['pageTop'];\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        this.updateNodesInVirtualRegion(diagram.nodes);\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.offsetX, y: this.startNode.offsetY } :\n                    { x: this.targetNode.offsetX, y: this.targetNode.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            if (!sourcePortID && this.startNode) {\n                for (var i = sourceLeft.gridX; i <= sourceRight.gridX; i++) {\n                    grid = this.gridCollection[i][sourceLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n                for (var i = sourceTop.gridY; i <= sourceBottom.gridY; i++) {\n                    grid = this.gridCollection[sourceTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.sourceGridCollection.indexOf(grid) === -1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n            }\n            else {\n                this.sourceGridCollection.push(this.startGrid);\n            }\n            if (!targetPortID && this.targetNode) {\n                for (var i = targetLeft.gridX; i <= targetRight.gridX; i++) {\n                    grid = this.gridCollection[i][targetLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                for (var i = targetTop.gridY; i <= targetBottom.gridY; i++) {\n                    grid = this.gridCollection[targetTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.targetGridCollection.indexOf(grid) === -1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                if (this.targetGridCollection.indexOf(this.targetGrid) === -1) {\n                    if (this.targetGrid.nodeId.length > 1 && this.targetGridCollection.length === 1) {\n                        this.targetGrid = this.targetGridCollection[0];\n                    }\n                }\n            }\n            else {\n                this.targetGridCollection.push(this.targetGrid);\n            }\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours);\n            this.neigbour(startGrid, 'right', neigbours);\n            this.neigbour(startGrid, 'bottom', neigbours);\n            this.neigbour(startGrid, 'left', neigbours);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && this.sourceGridCollection.indexOf(nearGrid) === -1) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","currentSymbol","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","totalHeight","phases","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","property","Array","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","key","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","Browser","info","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelectedNodeProperties","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","isBlazor","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","addNodeToLane","getDefaults","defaults","laneId","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","PreventHistory","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","startGridNode","getIntermediatePoints","updateConnectorSegments","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","neigbours","findNearestNeigbours","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}